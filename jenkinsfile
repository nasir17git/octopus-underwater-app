
pipeline {
    agent any
    environment { 
   	SLACK_CHANNEL = '#final' // 채널 
    TEAM_DOMAIN = 'testspace' // 워크스페이스 
    TOKEN_CREDENTIAL_ID = 'slack_jenkins'// 위에서 작성한 토큰 
    }

    options {
        skipStagesAfterUnstable()
    }
    stages {
         stage('Clone repository') { 
            steps { 
                script{
                checkout scm
                }
            }
        }

        stage('Build') { 
            steps { 
                script{
                 app = docker.build("underwater")
                }
            }
        }
        stage('Test'){
            steps {
                 echo 'Empty'
            }
        }
        stage('Deploy') {
            steps {
                script{
                        docker.withRegistry('https://596152156334.dkr.ecr.ap-northeast-2.amazonaws.com/underwater', 'ecr:ap-northeast-2:AWScredentials') {
                    app.push("${env.BUILD_NUMBER}")
                    app.push("latest")
                    }
                }
            }
        }
    }
  post {
    success {
         slackSend (channel: SLACK_CHANNEL, color: '#00FF00', message: "SUCCESSFUL: Image Build 'underwater:${env.BUILD_NUMBER}]'", teamDomain: TEAM_DOMAIN, tokenCredentialId: TOKEN_CREDENTIAL_ID )
         }

    failure {
         slackSend (channel: SLACK_CHANNEL, color: '#F01717', message: "FAILURE: Image Build 'underwater:${env.BUILD_NUMBER}]'", teamDomain: TEAM_DOMAIN, tokenCredentialId: TOKEN_CREDENTIAL_ID )
         }
    }
}
